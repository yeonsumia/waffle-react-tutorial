{"ast":null,"code":"var _jsxFileName = \"/Users/jeonhyeonseong/WebstormProjects/assignment1/src/components/Modal/Modal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './Modal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Modal = ({\n  modalOpen,\n  setModalOpen,\n  tableList,\n  setTableList,\n  setInfo\n}) => {\n  _s();\n\n  const [inputs, setInputs] = useState({\n    id: tableList.length + 1,\n    name: '',\n    grade: '',\n    profileImg: ''\n  });\n  const {\n    id,\n    name,\n    grade,\n    profileImg\n  } = inputs;\n\n  const closeModal = () => {\n    setModalOpen(false);\n    setInputs({ ...inputs,\n      name: '',\n      grade: '',\n      profileImg: ''\n    });\n  }; // window.addEventListener('click', closeModal)\n\n\n  const onChange = e => {\n    const {\n      value,\n      name\n    } = e.target;\n    setInputs({ ...inputs,\n      [name]: value\n    });\n  };\n\n  const onCreate = () => {\n    const gradeList = ['1', '2', '3'];\n\n    if (name.length > 3 || name.length < 2 || gradeList.find(num => num === grade) === undefined) {\n      alert(\"이름 또는 학년이 올바르지 않습니다.\");\n      return null;\n    }\n\n    tableList.map(user => user.name === name && user.grade == grade ? alert(\"같은 학년에 동명이인이 있습니다.\") : null);\n    setTableList([...tableList, inputs]); // setstate 는 비동기적으로 동작하므로,, 배열에 추가하더라도 바로 적용되지 X --> id: length+2 해주어야 함.\n\n    setInputs({ ...inputs,\n      id: tableList.length + 2,\n      name: '',\n      grade: '',\n      profileImg: ''\n    });\n    setInfo(id);\n    setModalOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: modalOpen ? \"openModal modal\" : \"modal\",\n    children: modalOpen ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modalWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modalBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modalBoxName\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modalBoxText\",\n            children: \"\\uC774\\uB984\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            value: name,\n            className: \"modalBoxInput\",\n            onChange: onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modalBoxGrade\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modalBoxText\",\n            children: \"\\uD559\\uB144\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"grade\",\n            value: grade,\n            className: \"modalBoxInput\",\n            onChange: onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modalBoxProfile\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modalBoxProfileText\",\n            children: \"\\uD504\\uB85C\\uD544\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"profileImg\",\n            value: profileImg,\n            className: \"modalBoxInput\",\n            onChange: onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"closeModal\",\n        onClick: closeModal,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"closeModalText\",\n          children: \"\\uB2EB\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"addUser\",\n        onClick: onCreate,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"addUserText\",\n          children: \"\\uCD94\\uAC00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Modal, \"uhLjcm9XSXfc6BpRZeURpuS24r4=\");\n\n_c = Modal;\nexport default Modal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"sources":["/Users/jeonhyeonseong/WebstormProjects/assignment1/src/components/Modal/Modal.js"],"names":["React","useEffect","useState","Modal","modalOpen","setModalOpen","tableList","setTableList","setInfo","inputs","setInputs","id","length","name","grade","profileImg","closeModal","onChange","e","value","target","onCreate","gradeList","find","num","undefined","alert","map","user"],"mappings":"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","sourcesContent":["import React, { useEffect, useState} from 'react'\nimport './Modal.css'\nconst Modal = ({modalOpen, setModalOpen, tableList, setTableList, setInfo}) => {\n    const [inputs, setInputs] = useState({\n        id: tableList.length+1,\n        name: '',\n        grade: '',\n        profileImg:''\n    });\n    const {id, name, grade, profileImg} = inputs;\n\n    const closeModal = () => {\n        setModalOpen(false)\n        setInputs({\n            ...inputs,\n            name:'',\n            grade:'',\n            profileImg: ''\n        })\n    };\n    // window.addEventListener('click', closeModal)\n    const onChange = (e) => {\n        const {value, name} = e.target;\n        setInputs({\n            ...inputs,\n            [name]: value\n        });\n    }\n\n    const onCreate = () => {\n        const gradeList = ['1','2','3']\n        if(name.length > 3 || name.length < 2 || gradeList.find(num => num === grade) === undefined ){\n            alert(\"이름 또는 학년이 올바르지 않습니다.\")\n            return null;\n        }\n        tableList.map(user => (\n            user.name === name && user.grade == grade ? alert(\"같은 학년에 동명이인이 있습니다.\"): null\n        ))\n\n        setTableList([...tableList, inputs]);\n        // setstate 는 비동기적으로 동작하므로,, 배열에 추가하더라도 바로 적용되지 X --> id: length+2 해주어야 함.\n        setInputs({\n            ...inputs,\n            id: tableList.length+2,\n            name:'',\n            grade:'',\n            profileImg: ''\n        })\n        setInfo(id)\n        setModalOpen(false)\n    }\n    return (\n        <div className={modalOpen? \"openModal modal\":\"modal\"}>\n            { modalOpen ? (\n                <div className=\"modalWrapper\">\n                    <div className=\"modalBox\">\n                        <div className=\"modalBoxName\">\n                            <div className=\"modalBoxText\" >이름</div>\n                            <input type=\"text\" name=\"name\" value={name}\n                                   className=\"modalBoxInput\" onChange={onChange} />\n                        </div>\n                        <div className=\"modalBoxGrade\">\n                            <div className=\"modalBoxText\">학년</div>\n                            <input type=\"text\" name=\"grade\" value={grade}\n                                   className=\"modalBoxInput\" onChange={onChange}/>\n                        </div>\n                        <div className=\"modalBoxProfile\">\n                            <div className=\"modalBoxProfileText\">프로필</div>\n                            <input type=\"text\" name=\"profileImg\" value={profileImg}\n                                   className=\"modalBoxInput\" onChange={onChange}/>\n                        </div>\n                    </div>\n                    <div className=\"closeModal\" onClick={closeModal}>\n                        <div className=\"closeModalText\">닫기</div>\n                    </div>\n                    <div className=\"addUser\" onClick={onCreate}>\n                        <div className=\"addUserText\">추가</div>\n                    </div>\n                </div>\n            ) : null }\n        </div>\n    )\n}\n\nexport default Modal"]},"metadata":{},"sourceType":"module"}