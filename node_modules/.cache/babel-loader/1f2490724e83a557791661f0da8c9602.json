{"ast":null,"code":"var _jsxFileName = \"/Users/jeonhyeonseong/WebstormProjects/assignment_2/waffle-rookies-19.5-react-assignment/src/hoc/Auth.js\";\nimport React, { useEffect } from 'react';\nimport { useUserContext } from \"../context/UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Auth = (SpecialComponent, option, adminRoute = null) => {\n  var _s = $RefreshSig$();\n\n  /*\n     예)  option: null -> 누구나 출입이 가능한 페이지 (home)\n                 true -> 로그인한 유저만 출입이 가능한 페이지\n                 false -> 로그인한 유저는 출입이 불가능한 페이지\n  */\n  const AuthenticateCheck = props => {\n    _s();\n\n    const {\n      loginCheck\n    } = useUserContext();\n    useEffect(() => {\n      if (!loginCheck && sessionStorage.getItem('loginCheck') !== 'true' && option) {\n        props.history.push('/login');\n      }\n    }, []);\n    return /*#__PURE__*/_jsxDEV(SpecialComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this);\n  };\n\n  _s(AuthenticateCheck, \"9xlwOl+vTPIQy3lyJOp7kpb7XBs=\", false, function () {\n    return [useUserContext];\n  });\n\n  return AuthenticateCheck;\n};\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["/Users/jeonhyeonseong/WebstormProjects/assignment_2/waffle-rookies-19.5-react-assignment/src/hoc/Auth.js"],"names":["React","useEffect","useUserContext","Auth","SpecialComponent","option","adminRoute","AuthenticateCheck","props","loginCheck","sessionStorage","getItem","history","push"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,cAAR,QAA6B,wBAA7B;;;AAEA,MAAMC,IAAI,GAAG,CAACC,gBAAD,EAAmBC,MAAnB,EAA2BC,UAAU,GAAC,IAAtC,KAA+C;AAAA;;AAExD;AACJ;AACA;AACA;AACA;AACI,QAAMC,iBAAiB,GAAIC,KAAD,IAAW;AAAA;;AACjC,UAAM;AAACC,MAAAA;AAAD,QAAeP,cAAc,EAAnC;AAEAD,IAAAA,SAAS,CAAC,MAAM;AACZ,UAAI,CAACQ,UAAD,IAAeC,cAAc,CAACC,OAAf,CAAuB,YAAvB,MAAyC,MAAxD,IAAkEN,MAAtE,EAA8E;AAC1EG,QAAAA,KAAK,CAACI,OAAN,CAAcC,IAAd,CAAmB,QAAnB;AACH;AACJ,KAJQ,EAIN,EAJM,CAAT;AAMA,wBACI,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,YADJ;AAIH,GAbD;;AAPwD,KAOlDN,iBAPkD;AAAA,YAQ/BL,cAR+B;AAAA;;AAsBxD,SAAOK,iBAAP;AAEH,CAxBD;;KAAMJ,I;AA0BN,eAAeA,IAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport {useUserContext} from \"../context/UserContext\";\n\nconst Auth = (SpecialComponent, option, adminRoute=null) => {\n\n    /*\n       예)  option: null -> 누구나 출입이 가능한 페이지 (home)\n                   true -> 로그인한 유저만 출입이 가능한 페이지\n                   false -> 로그인한 유저는 출입이 불가능한 페이지\n    */\n    const AuthenticateCheck = (props) => {\n        const {loginCheck} = useUserContext();\n\n        useEffect(() => {\n            if (!loginCheck && sessionStorage.getItem('loginCheck') !== 'true' && option) {\n                props.history.push('/login');\n            }\n        }, []);\n\n        return (\n            <SpecialComponent />\n        )\n\n    };\n\n    return AuthenticateCheck;\n\n}\n\nexport default Auth"]},"metadata":{},"sourceType":"module"}